name: BEAST CI
#on:
#    push:
#        branches:
#            - main
#    pull_request:

on: [push]

# Cancel if a newer run is started
concurrency:
    group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
    cancel-in-progress: true

env:
    BEAGLE_DIR: beagle-lib
    BEAGLE_LIB: beagle-lib/usr/local/lib
    LD_LIBRARY_PATH: beagle-lib/usr/local/lib
    BEAGLE_BRANCH: v4_release

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - name: Set up JDK 8
              uses: actions/setup-java@v4
              with:
                  java-version: "8"
                  distribution: "adopt"
            - name: Setup cmake
              uses: lukka/get-cmake@latest
            - name: Cache BEAGLE
              id: cache
              uses: actions/cache@v4
              with:
                  path: |
                      ${{ env.BEAGLE_DIR }}
                      build/dist
                  key: beagle-beast-${{ hashFiles('**/build_beagle.sh', '**/build.xml') }}
            - name: Build BEAGLE
              run: |
                  chmod +x ./.github/scripts/build_beagle.sh
                  ./.github/scripts/build_beagle.sh
            - name: Build BEAST
              run: ant dist
            - name: Check BEAGLE
              run: |
                  ls ${BEAGLE_LIB}
                  java -jar -Djava.library.path=${BEAGLE_LIB} build/dist/beast.jar -beagle_info
            - name: Set up test matrices
              id: set-matrices
              run: |
                  echo "xml-matrix=$(ls tests/TestXML/*.xml | jq -R -s -c 'split("\n")[:-1]')" >> $GITHUB_OUTPUT
                  echo "xml-short-load-state-matrix=$(ls tests/TestXMLwithLoadState/*.xml | grep MC.xml | jq -R -s -c 'split("\n")[:-1]')" >> $GITHUB_OUTPUT
                  echo "xml-long-load-state-matrix=$(ls tests/TestXMLwithLoadState/*.xml | grep long.xml | jq -R -s -c 'split("\n")[:-1]')" >> $GITHUB_OUTPUT
        outputs:
            xml-matrix: ${{ steps.set-matrices.outputs.xml-matrix }}
            xml-short-load-state-matrix: ${{ steps.set-matrices.outputs.xml-short-load-state-matrix }}
            xml-long-load-state-matrix: ${{ steps.set-matrices.outputs.xml-long-load-state-matrix }}

    test-xml:
        needs: build
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                file: ${{fromJson(needs.build.outputs.xml-matrix)}}
        steps:
            - uses: actions/checkout@v4
            - uses: actions/cache@v4
              with:
                  path: |
                      ${{ env.BEAGLE_DIR }}
                      build/dist
                  key: beagle-beast-${{ hashFiles('**/build_beagle.sh', '**/build.xml') }}
                  restore-keys: |
                      beagle-beast
            - name: Rebuild project
              run: ant dist                      
            - name: Run test for ${{ matrix.file }}
              run: java -Djava.library.path=${BEAGLE_LIB} -jar build/dist/beast.jar -fail_threads -seed 666 -overwrite ${{ matrix.file }}

    # Test checkpointing by running 2 shorter analyses
    test-xml-short-load-state:
        needs: build
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                file: ${{fromJson(needs.build.outputs.xml-short-load-state-matrix)}}
        steps:
            - uses: actions/checkout@v4
            - uses: actions/cache@v4
              with:
                  path: |
                      ${{ env.BEAGLE_DIR }}
                      build/dist
                  key: beagle-beast-${{ hashFiles('**/build_beagle.sh', '**/build.xml') }}
                  restore-keys: |
                      beagle-beast
            - name: Rebuild project
              run: ant dist
            - name: Run test with load state for ${{ matrix.file }}
              id: short-checkpointing
              run: |
                  checkpoint=$(basename ${{ matrix.file }} .xml).chkpt
                  java -Djava.library.path=${BEAGLE_LIB} -jar build/dist/beast.jar -fail_threads -seed 666 -save_state $checkpoint -save_at 5000 ${{ matrix.file }}
                  java -Djava.library.path=${BEAGLE_LIB} -jar build/dist/beast.jar -fail_threads -seed 666 -load_state $checkpoint -save_state $checkpoint -save_at 10000 -overwrite ${{ matrix.file }}
            - name: Check generated files
              run: ls -R
            - name: Upload checkpoint file
              uses: actions/upload-artifact@v4
              with:
                  name: checkpoint_short
                  path: ./*.chkpt
                  overwrite: true

    # Test checkpointing by running a longer analysis, and compare against the checkpoint file from the 2 shorter analyses
    test-xml-long-load-state:
        needs: [build, test-xml-short-load-state]
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                file: ${{fromJson(needs.build.outputs.xml-long-load-state-matrix)}}
        steps:
            - uses: actions/checkout@v4
            - uses: actions/cache@v4
              with:
                  path: |
                      ${{ env.BEAGLE_DIR }}
                      build/dist
                  key: beagle-beast-${{ hashFiles('**/build_beagle.sh', '**/build.xml') }}
                  restore-keys: |
                      beagle-beast
            - name: Rebuild project
              run: ant dist
            - name: Download checkpoint file
              uses: actions/download-artifact@v4
              with:
                  name: checkpoint_short
            - name: Check downloaded files
              run: ls -R
            - name: Run test without load state for ${{ matrix.file }}
              id: long-checkpointing
              run: java -Djava.library.path=${BEAGLE_LIB} -jar build/dist/beast.jar -fail_threads -seed 666 -overwrite ${{ matrix.file }}

    test-junit:
        needs: build
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-java@v4
              with:
                  java-version: "8"
                  distribution: "adopt"
            - uses: actions/cache@v4
              with:
                  path: |
                      ${{ env.BEAGLE_DIR }}
                      build/dist
                  key: beagle-beast-${{ hashFiles('**/build_beagle.sh', '**/build.xml') }}
                  restore-keys: |
                      beagle-beast
            - name: Rebuild project
              run: ant dist
            - name: Run JUnit tests
              run: |
                  ant -Djava.library.path=${BEAGLE_LIB} junit
