<?xml version="1.0" standalone="yes"?>
<!-- Generated by BEAUTi v1.5.4                                              -->
<!--       by Alexei J. Drummond and Andrew Rambaut                          -->
<!--       Department of Computer Science, University of Auckland and        -->
<!--       Institute of Evolutionary Biology, University of Edinburgh        -->
<!--       http://beast.bio.ed.ac.uk/                                        -->
<beast>

    <taxa id="taxa">
		<taxon id="t1" > <attr name="simTrait"> 1.2227698 -0.7261957 </attr> </taxon>
		<taxon id="t2" > <attr name="simTrait"> 1.0726631 -1.1369201 </attr> </taxon>
		<taxon id="t3" > <attr name="simTrait"> 0.8685743 -0.8065505 </attr> </taxon>
		<taxon id="t4" > <attr name="simTrait"> 0.9582315 -0.7899381 </attr> </taxon>
		<taxon id="t5" > <attr name="simTrait"> 0.9664143 -1.0377868 </attr> </taxon>
		<taxon id="t6" > <attr name="simTrait"> 1.5149374 -0.9898526 </attr> </taxon>
		<taxon id="t7" > <attr name="simTrait"> 1.2724726 -0.8107164 </attr> </taxon>
		<taxon id="t8" > <attr name="simTrait"> 1.3025280 -0.9590552 </attr> </taxon>
		<taxon id="t9" > <attr name="simTrait"> 1.4751707 -1.1880609 </attr> </taxon>
		<taxon id="t10"> <attr name="simTrait"> 1.3420694 -0.8699952 </attr> </taxon>
		<taxon id="t11"> <attr name="simTrait"> 1.5151535 -0.7966167 </attr> </taxon>
		<taxon id="t12"> <attr name="simTrait"> 0.9171716 -0.8819785 </attr> </taxon>
		<taxon id="t13"> <attr name="simTrait"> 0.9799436 -0.9611270 </attr> </taxon>
		<taxon id="t14"> <attr name="simTrait"> 0.3851789 -1.2277910 </attr> </taxon>
		<taxon id="t15"> <attr name="simTrait"> 1.5222183 -0.6244652 </attr> </taxon>
		<taxon id="t16"> <attr name="simTrait"> 1.1566202 -0.6727409 </attr> </taxon>
		<taxon id="t17"> <attr name="simTrait"> 0.9124125 -1.2366007 </attr> </taxon>
		<taxon id="t18"> <attr name="simTrait"> 1.3730203 -1.1229712 </attr> </taxon>
		<taxon id="t19"> <attr name="simTrait"> 1.0718368 -0.9707872 </attr> </taxon>
		<taxon id="t20"> <attr name="simTrait"> 0.9723936 -0.8821143 </attr> </taxon>
		<taxon id="t21"> <attr name="simTrait"> 1.1912527 -0.6944902 </attr> </taxon>
		<taxon id="t22"> <attr name="simTrait"> 1.2858180 -0.9908703 </attr> </taxon>
		<taxon id="t23"> <attr name="simTrait"> 1.3320367 -0.8418475 </attr> </taxon>
		<taxon id="t24"> <attr name="simTrait"> 1.3114575 -0.9656843 </attr> </taxon>
		<taxon id="t25"> <attr name="simTrait"> 1.1545573 -0.8212603 </attr> </taxon>
		<taxon id="t26"> <attr name="simTrait"> 1.3242366 -0.5425224 </attr> </taxon>
		<taxon id="t27"> <attr name="simTrait"> 1.1145173 -0.4718487 </attr> </taxon>
		<taxon id="t28"> <attr name="simTrait"> 1.0365679 -0.4296769 </attr> </taxon>
		<taxon id="t29"> <attr name="simTrait"> 1.1061782 -0.7987673 </attr> </taxon>
		<taxon id="t30"> <attr name="simTrait"> 1.2553598 -1.0625064 </attr> </taxon>
		<taxon id="t31"> <attr name="simTrait"> 1.1247775 -1.2381615 </attr> </taxon>
		<taxon id="t32"> <attr name="simTrait"> 1.0577332 -1.4936417 </attr> </taxon>
		<taxon id="t33"> <attr name="simTrait"> 0.8478792 -1.3852466 </attr> </taxon>
		<taxon id="t34"> <attr name="simTrait"> 0.9911017 -0.9879372 </attr> </taxon>
		<taxon id="t35"> <attr name="simTrait"> 1.1434221 -0.7471522 </attr> </taxon>
		<taxon id="t36"> <attr name="simTrait"> 1.3191237 -1.0514836 </attr> </taxon>
		<taxon id="t37"> <attr name="simTrait"> 1.5565759 -0.5811532 </attr> </taxon>
		<taxon id="t38"> <attr name="simTrait"> 0.9010859 -0.9003954 </attr> </taxon>
		<taxon id="t39"> <attr name="simTrait"> 1.0843646 -1.1860191 </attr> </taxon>
		<taxon id="t40"> <attr name="simTrait"> 0.9845304 -1.4541528 </attr> </taxon>
		<taxon id="t41"> <attr name="simTrait"> 0.9410548 -0.5552954 </attr> </taxon>
		<taxon id="t42"> <attr name="simTrait"> 0.8923562 -0.8678634 </attr> </taxon>
		<taxon id="t43"> <attr name="simTrait"> 1.2866564 -1.3646126 </attr> </taxon>
		<taxon id="t44"> <attr name="simTrait"> 0.8813059 -1.0467843 </attr> </taxon>
		<taxon id="t45"> <attr name="simTrait"> 1.0320613 -1.4904015 </attr> </taxon>
		<taxon id="t46"> <attr name="simTrait"> 1.4612321 -0.9067284 </attr> </taxon>
		<taxon id="t47"> <attr name="simTrait"> 1.4511963 -1.2133063 </attr> </taxon>
		<taxon id="t48"> <attr name="simTrait"> 0.9326738 -1.0730522 </attr> </taxon>
		<taxon id="t49"> <attr name="simTrait"> 0.7432413 -0.8770150 </attr> </taxon>
		<taxon id="t50"> <attr name="simTrait"> 1.4776469 -0.9618090 </attr> </taxon>
    </taxa>

    <!-- ************************************************** -->
    <!-- Tree -->
    
	<newick id="tree" usingHeights="true" usingDates="false" fixTree="true">
		((((((t43:0.1059719885,(t19:0.7892120031,t42:0.5760727846):0.627427045):0.9010247793,((((t12:0.2962531799,t41:0.03283611336):0.3841669196,t3:0.7637298508):0.08311443194,t48:0.6461560612):0.312846381,t21:0.9670215896):0.4960991098):0.5085192155,(((t8:0.4643487416,(t39:0.576090174,t26:0.9888359865):0.6963298502):0.1537927554,((t22:0.3375365338,t16:0.3881768216):0.1472413938,t9:0.3247638217):0.07172067603):0.1763129232,(t4:0.3532753531,(((t38:0.6340263484,t5:0.4965861121):0.7677134287,(t35:0.5900521646,t10:0.6285774689):0.7469333387):0.539595041,((t46:0.50487571,t40:0.2551776231):0.3044675237,(t47:0.4236122216,t2:0.9680537551):0.2796133966):0.3034142121):0.6073732751):0.528183833):0.7723978807):0.1726390077,((t31:0.9427424332,t14:0.8554894007):0.4136597032,((t28:0.04564328585,t1:0.2902032661):0.08475172403,t36:0.9538093871):0.7300552914):0.312896345):0.8349318774,((((t45:0.3802617362,t17:0.6793206674):0.2582668434,(((t37:0.7290884678,t25:0.813383182):0.3374806445,t24:0.6569529849):0.5949012097,t7:0.9984837351):0.02440502984):0.5524269666,((t29:0.09238044708,t27:0.220983973):0.001528105699,((t32:0.1853108162,t34:0.1168490963):0.925590555,t23:0.3429273376):0.5273454699):0.7159924016):0.1236002895,(t49:0.6397151044,(t33:0.9471332778,t13:0.8779754001):0.3399083342):0.2235862296):0.09371120855):0.4415345152,((t44:0.8831378852,t20:0.306412051):0.9900759817,((t18:0.3211695279,t11:0.4039712814):0.6031016102,(((t6:0.06351449154,t30:0.8787636801):0.1044729555,t50:0.01605698559):0.07613758487,t15:0.9829165593):0.3911359902):0.8190868769):0.5864570588);
    </newick>

    <treeModel id="treeModel">
        <newick idref="tree"/>
        <rootHeight>
            <parameter id="treeModel.rootHeight"/>
        </rootHeight>
        <nodeHeights internalNodes="true">
            <parameter id="treeModel.internalNodeHeights"/>
        </nodeHeights>
        <nodeHeights internalNodes="true" rootNode="true">
            <parameter id="treeModel.allInternalNodeHeights"/>
        </nodeHeights>
		<nodeTraits name="simTrait.tipTraits" rootNode="false" internalNodes="false" leafNodes="true" traitDimension="2" asMatrix="true">
			<parameter id="simTrait.leafTraits"/>
		</nodeTraits>
    </treeModel>

    <multivariateDiffusionModel id="simTrait.diffusionModel">
        <precisionMatrix>
            <cachedMatrixInverse id="simTrait.precision.matrix">
                <compoundSymmetricMatrix id="simTrait.variance.matrix" asCorrelation="true" isCholesky="true">
                    <diagonal>
                        <parameter id="simTrait.variance.diagonal" value="1 1" lower="0 0"/>
                    </diagonal>
                    <offDiagonal>
                        <parameter id="simTrait.variance.offDiagonal" value="0"/>
                    </offDiagonal>
                </compoundSymmetricMatrix>
            </cachedMatrixInverse>
        </precisionMatrix>
	</multivariateDiffusionModel>

    <parameter id="simTrait.opt.1" value="0.0"/>
    <parameter id="simTrait.opt.2" value="0.0"/>

	<diagonalMatrix id="simTrait.attenuation.matrix">
		<parameter id="simTrait.attenuation.values" value="1 1" lower="0 0"/>
	</diagonalMatrix>

	<repeatedMeasuresModel id="simTrait.repeatedMeasures" traitName="simTrait" scaleByTipHeight="true">
		<treeModel idref="treeModel"/>
		<traitParameter>
			<parameter idref="simTrait.leafTraits"/>
		</traitParameter>
		<samplingPrecision>
			<cachedMatrixInverse id="simTrait.sampling.precision.matrix">
				<compoundSymmetricMatrix id="simTrait.sampling.variance.matrix" asCorrelation="true" isCholesky="true">
					<diagonal>
						<parameter id="simTrait.sampling.variance.diagonal" value="1 0.01" lower="0 0"/>
					</diagonal>
					<offDiagonal>
						<parameter id="simTrait.sampling.variance.offDiagonal" value="0"/>
					</offDiagonal>
				</compoundSymmetricMatrix>
			</cachedMatrixInverse>
		</samplingPrecision>
		<multivariateDiffusionModel idref="simTrait.diffusionModel"/>
	</repeatedMeasuresModel>

    <traitDataLikelihood id="simTrait.traitLikelihood" traitName="simTrait" 
        useTreeLength="false" scaleByTime="true" 
        forceFullPrecision="true" allowSingular="true"
        reportAsMultivariate="true" integrateInternalTraits="true">
		<multivariateDiffusionModel idref="simTrait.diffusionModel"/>
		<transformedTreeModel>
		    <treeModel idref="treeModel"/>
		    <parameter id="simTrait.lambda" value="1.0" lower="0.0" upper="1.0"/>
		</transformedTreeModel>
		<conjugateRootPrior>
            <meanParameter>
                <compoundParameter id="simTrait.meanParameter">
                    <parameter idref="simTrait.opt.1"/>
                    <parameter idref="simTrait.opt.2"/>
                </compoundParameter>
            </meanParameter>
            <priorSampleSize>
                <parameter value="Infinity"/> <!-- 1 is probably a good number -->
            </priorSampleSize>
		</conjugateRootPrior>
		<optimalTraits id="simTrait.opt">
		<strictClockBranchRates>
			<rate>
				<parameter idref="simTrait.opt.1"/>
			</rate>
		</strictClockBranchRates>
		<strictClockBranchRates>
			<rate>
				<parameter idref="simTrait.opt.2"/>
			</rate>
		</strictClockBranchRates>
		</optimalTraits>
		<strengthOfSelectionMatrix>
			<matrixParameter idref="simTrait.attenuation.matrix"/>
		</strengthOfSelectionMatrix>
		<repeatedMeasuresModel idref="simTrait.repeatedMeasures"/>
	</traitDataLikelihood>
	
	<varianceProportionStatistic id="varianceLog" matrixRatio="coheritability" usePopulationVariance="true">
        <traitDataLikelihood idref="simTrait.traitLikelihood"/>
    </varianceProportionStatistic>
    
     <assertEqual tolerance="1e-1" verbose="true" charactersToStrip="{}">
        <message>
            Check trait variance
        </message>
        <actual regex="(?s)stat value = \s*(.*?)\n\n">
            <varianceProportionStatistic idref="varianceLog"/>
        </actual>
        <expected>
            0.3635417    0.00000000
            0.00000000   0.98279406 
        </expected>
    </assertEqual>
	
	<LKJCorrelationPrior id="simTrait.variance.offDiagonal.prior" shapeParameter="1.0" dimension="2">
		<data>
            <parameter idref="simTrait.variance.offDiagonal"/>
		</data>
	</LKJCorrelationPrior>
	<halfTPrior id="simTrait.variance.diagonal.prior" df="1" scale="2.5">
		<parameter idref="simTrait.variance.diagonal"/>
	</halfTPrior>
	<normalPrior id="simTrait.meanParameter.prior" mean="0" stdev="5">
		<parameter idref="simTrait.meanParameter"/>
	</normalPrior>
				<halfNormalPrior id="simTrait.attenuation.values.prior" mean="0" stdev="7.07306">
					<parameter idref="simTrait.attenuation.values"/>
				</halfNormalPrior>
	
				<halfTPrior id="simTrait.sampling.variance.diagonal.prior" df="1" scale="2.5">
					<parameter idref="simTrait.sampling.variance.diagonal"/>
				</halfTPrior>
	<diffusionGradient id="diffusion.gradient">
        <precisionGradient parameter="both" traitName="simTrait">
            <traitDataLikelihood idref="simTrait.traitLikelihood"/>
            <cachedMatrixInverse idref="simTrait.precision.matrix"/>
        </precisionGradient>
		<attenuationGradient parameter="diagonal" traitName="simTrait">
			<traitDataLikelihood idref="simTrait.traitLikelihood"/>
			<compoundSymmetricMatrix idref="simTrait.attenuation.matrix"/>
		</attenuationGradient>
		<meanGradient parameter="both" traitName="simTrait">
            <traitDataLikelihood idref="simTrait.traitLikelihood"/>
            <parameter idref="simTrait.meanParameter"/>
        </meanGradient>
    </diffusionGradient>
	
	<precisionGradient id="errorModel.gradient"  parameter="diagonal" traitName="simTrait">
		<repeatedMeasuresModel idref="simTrait.repeatedMeasures"/>
		<traitDataLikelihood idref="simTrait.traitLikelihood"/>
		<compoundSymmetricMatrix idref="simTrait.sampling.precision.matrix"/>
	</precisionGradient>

	<compoundGradient id="simTrait.traitLikelihood.gradient">
		<diffusionGradient idref="diffusion.gradient"/>
		<precisionGradient idref="errorModel.gradient"/>
	</compoundGradient>
	<report>
        <diffusionGradient idref="simTrait.traitLikelihood.gradient"/>
    </report>

    <compoundGradient id="simTrait.prior.gradient">
        <gradient>
            <halfTPrior idref="simTrait.variance.diagonal.prior"/>
            <parameter idref="simTrait.variance.diagonal"/>
        </gradient>
        <gradient>
            <LKJCorrelationPrior idref="simTrait.variance.offDiagonal.prior"/>
        </gradient>
		<gradient>
			<distributionLikelihood idref="simTrait.attenuation.values.prior"/>
			<parameter idref="simTrait.attenuation.values"/>
		</gradient>
        <gradient>
            <distributionLikelihood idref="simTrait.meanParameter.prior"/>
            <parameter idref="simTrait.meanParameter"/>
        </gradient>
		<gradient>
			<halfTPrior idref="simTrait.sampling.variance.diagonal.prior"/>
			<parameter idref="simTrait.sampling.variance.diagonal"/>
		</gradient>
    </compoundGradient>

    <jointGradient id="simTrait.posterior.gradient">
        <diffusionGradient idref="simTrait.traitLikelihood.gradient"/>
        <compoundGradient idref="simTrait.prior.gradient"/>
    </jointGradient>
    
    <operators id="operators">
        <hamiltonianMonteCarloOperator weight="1" nSteps="10" stepSize="0.01" mode="vanilla"
                                       drawVariance="1.0" gradientCheckCount="1" gradientCheckTolerance="0.5">
            <pathGradient>
                <source>
                    <gradient idref="simTrait.posterior.gradient"/>
                </source>
                <destination>
                    <gradient idref="simTrait.prior.gradient"/>
                </destination>
            </pathGradient>
            <compoundParameter id="simTrait.compound.parameter">
                <parameter idref="simTrait.variance.diagonal"/>
                <parameter idref="simTrait.variance.offDiagonal"/>
				<parameter idref="simTrait.attenuation.values"/>
                <parameter idref="simTrait.meanParameter"/>
				<parameter idref="simTrait.sampling.variance.diagonal"/>
            </compoundParameter>
            <multivariateCompoundTransform id="simTrait.compound.transform">
                <transform type="log" dim="2"/>
                <LKJTransform dimension="2"/>
				<transform type="log" dim="2"/>
                <transform type="none" dim="2"/>
				<transform type="log" dim="2"/>
            </multivariateCompoundTransform>
        </hamiltonianMonteCarloOperator>
	</operators>

	<mcmc id="mcmc" chainLength="100" autoOptimize="true"> 
		<posterior id="posterior">
			<prior id="prior">
                <LKJCorrelationPrior idref="simTrait.variance.offDiagonal.prior"/>
				<halfNormalPrior idref="simTrait.attenuation.values.prior"/>
                <halfTPrior idref="simTrait.variance.diagonal.prior"/>
				<normalPrior idref="simTrait.meanParameter.prior"/>
				<halfTPrior idref="simTrait.sampling.variance.diagonal.prior"/>
			</prior>
			<likelihood id="likelihood">
                <traitDataLikelihood idref="simTrait.traitLikelihood"/>
			</likelihood>
		</posterior>

		<operators idref="operators"/>

		<log id="screenLog" logEvery="100">
			<column label="Posterior" dp="4" width="12">
				<posterior idref="posterior"/>
			</column>
			<column label="Prior" dp="4" width="12">
				<prior idref="prior"/>
			</column>
			<column label="Likelihood" dp="4" width="12">
				<likelihood idref="likelihood"/>
			</column>
			<column label="rootHeight" sf="6" width="12">
				<parameter idref="treeModel.rootHeight"/>
			</column>
			<column label="heritability" dp="4" width="12">
				<variancePorportionStatistic idref="varianceLog"/>
			</column>
		</log>
				
		<log id="fileLog" logEvery="10" fileName="testRepeatedMeasuresOUHmcTreeScaled.log">
			<traitDataLikelihood idref="simTrait.traitLikelihood"/>
			<matrixParameter idref="simTrait.variance.matrix"/>
			<parameter idref="simTrait.meanParameter"/>
			<parameter idref="simTrait.attenuation.matrix"/>
			<parameter idref="simTrait.sampling.variance.matrix"/>
			<variancePorportionStatistic idref="varianceLog"/>
		</log>
		
		<logTree id="treeFileLog" logEvery="10" nexusFormat="true" fileName="testRepeatedMeasuresOUHmcTreeScaled.trees">
			<treeModel idref="treeModel"/>
		</logTree>
						
	</mcmc>
	
	<report>
	Time Chain: 
		<property name="timer">
			<mcmc idref="mcmc"/>
		</property>
	</report>
	
	<assertEqual tolerance="1e-2" verbose="true" charactersToStrip="{}">
        <message>
            Check trait variance
        </message>
        <actual regex="(?s)stat value = \s*(.*?)\n\n">
            <varianceProportionStatistic idref="varianceLog"/>
        </actual>
        <expected>
			0.9966896    0.04666217
			0.04666217   0.02887752
        </expected>
    </assertEqual>

</beast>

<!--
# R function to compute heritability (for comparisons)

rm(list = ls())

library(here)
library(tidyverse)
library(PhylogeneticEM)

###############################################################################
## Utility functions

read_log <- function(file, burning){
  ## Read in file
  dat <- read_tsv(file, skip = 3)
  
  ## Burning
  length_chain <- max(dat$state)
  burning_length <- floor(length_chain * burning)
  
  ## data
  return(dat %>% filter(state >= burning_length))
}

cor_extended <- function(A, B) {
  C <- A
  for (i in 1:nrow(A)) {
    for (j in 1:ncol(A)) {
      C[i, j] <- C[i, j] / sqrt((A[i, i] + B[i, i]) * (A[j, j] + B[j, j]))
    }
  }
  return(C)
}

get_sampling_variance <- function(vv, dimTrait, ntaxa, times_shared, treeScaled){
  # samplingVar <- as.vector(solve(matrix(as.numeric(vv[grep("sampling.precision.matrix", names(vv))]), ncol = dimTrait)))
  samplingVar <- as.vector(matrix(as.numeric(vv[grep("sampling.variance.matrix", names(vv))]), ncol = dimTrait))
  if (treeScaled) samplingVar <- mean(diag(times_shared)[1:ntaxa]) * samplingVar
  return(samplingVar)
}

compute_heritability_multi_ou_model <- function(dimTrait, variance, selectionStrength, sampleSizeRoot, samplingVar, times_shared, ntaxa) {
  get_ou_variance <- function(dimTrait, variance, selectionStrength, sampleSizeRoot) {
    if (anyNA(selectionStrength)) selectionStrength <- matrix(0, dimTrait, dimTrait)
    if (is.finite(sampleSizeRoot)){
      paramsBEAST <- params_OU(p = dimTrait, variance = variance,
                               selection.strength = selectionStrength,
                               optimal.value = rep(0, dimTrait),
                               random = TRUE, stationary.root = FALSE,
                               exp.root = rep(0, dimTrait), var.root = variance / sampleSizeRoot)
    } else {
      paramsBEAST <- params_OU(p = dimTrait, variance = variance,
                               selection.strength = selectionStrength,
                               optimal.value = rep(0, dimTrait),
                               random = FALSE, stationary.root = FALSE,
                               value.root = rep(0, dimTrait))
    }
    V <- PhylogeneticEM:::compute_variance_block_diagonal.OU(times_shared, paramsBEAST, ntaxa)
  }
  vv <- get_ou_variance(dimTrait, variance, selectionStrength, sampleSizeRoot)
  treeVar <- apply(vv, c(1, 2), mean)
  # return(treeVar %*% solve(treeVar + samplingVar))
  cor_extended(treeVar, samplingVar)
}

compute_heritability_multi_ou_varying_trees <- function(dat_log, dat_tree, traitName, dimTrait, sampleSizeRoot, treeScaled = FALSE) {
  if (nrow(dat_log) != length(dat_tree)) stop("Parameter log and tree log must be of the same length.")
  sum_vars <- function(i) {
    var <- matrix(as.numeric(dat_log[i, colPrecMat]), dimTrait, dimTrait)
    att <- matrix(as.numeric(dat_log[i, colAttMat]), dimTrait, dimTrait)
    tree <- dat_tree[[i]]
    ntaxa <- length(tree$tip.label)
    tree$edge.length <- tree$edge.length / max(ape::node.depth.edgelength(dat_tree[[i]])[1:ntaxa]) # Normalize tree
    times_shared <- PhylogeneticEM::compute_times_ca(tree)
    samplingVar <- matrix(get_sampling_variance(dat_log[i, ], dimTrait, ntaxa, times_shared = times_shared, treeScaled = treeScaled), dimTrait, dimTrait)
    compute_heritability_multi_ou_model(dimTrait, var, att, sampleSizeRoot, samplingVar, times_shared, ntaxa)
  }
  ## Trait tree variance
  colPrecMat <- grep(paste0(traitName, ".variance.matrix"), colnames(dat_log))
  colAttMat <- grep(paste0(traitName,".attenuation.matrix"), colnames(dat_log))
  hh <- sapply(1:length(dat_tree), sum_vars)
  if (is.vector(hh)) return(t(t(hh)))
  return(t(hh))
}

###############################################################################
## House keeping

## Directory
directory <- "."
results_folder <- ""
file_results <- file.path(results_folder, "testRepeatedMeasuresOUHmcTreeScaled.log")

## Parameters
dimTrait <- 2
sampleSizeRoot <- Inf
traitName <- "simTrait"
tree_scaled = FALSE

###############################################################################
## Heritability

dat_log <- read_log(file = file.path(directory, results_folder, file_results), burning = 0)

dat_tree <- ape::read.nexus(file = file.path(directory, results_folder, sub("\\.log", "\\.trees", file_results)))

herr <- compute_heritability_multi_ou_varying_trees(dat_log, dat_tree, traitName, dimTrait, sampleSizeRoot, treeScaled = tree_scaled)

colnames(herr) <- paste0(traitName, ".h", outer(1:dimTrait, 1:dimTrait, paste0))
herr <- data.frame(herr)
herr$state <- dat_log$state
herr
-->

<!--
## R simulation script
library(mvMORPH)

set.seed(20200611)

## Simluate a tree
n <- 50
tree <- rphylo(n, birth = 0.1, death = 0)
# Normalise to unit height
tree$edge.length <- tree$edge.length / max(diag(vcv(tree)))

## Simulate trait
p <- 2
sigma2 <- matrix(c(0.1, 0.01, 0.01, 0.2), p, p)
theta <- c(1.0, -1.0)
alpha <- matrix(c(1, 0, 0, 2), p, p)
sigma2_err <- c(0.01, 0.2)
errors <- matrix(rep(sigma2_err, each = n), n, p)
rownames(errors) <- tree$tip.label

trait <- mvSIM(tree = tree,
               nsim = 1,
               error = matrix(),
               model = "OU1",
               param = list(theta = theta, sigma = sigma2, alpha = alpha))

trait
write.tree(tree)
-->

<!--
# R script for simulations
library(mvMORPH)

set.seed(20200611)

## Simluate a tree
n <- 50
tree <- rtree(n)

## Simulate trait
p <- 2
sigma2 <- matrix(c(0.1, 0.01, 0.01, 0.2), p, p)
theta <- c(1.0, -1.0)
alpha <- matrix(c(1, 0, 0, 2), p, p)
sigma2_err <- c(0.01, 0.2)
errors <- matrix(rep(sigma2_err, each = n), n, p)
rownames(errors) <- tree$tip.label

trait <- mvSIM(tree = tree,
               nsim = 1,
               error = matrix(),
               model = "OU1",
               param = list(theta = theta, sigma = sigma2, alpha = alpha))

trait[paste0("t", 1:n), ]
write.tree(tree)
-->
